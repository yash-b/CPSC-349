{"version":3,"sources":["ws-client.js","app.js","main.js"],"names":["socket","init","url","WebSocket","console","log","registerOpenHandler","handlerFunction","onopen","registerMessageHandler","onmessage","e","data","JSON","parse","sendMessage","payload","send","stringify","ChatMessage","m","message","user","u","timestamp","t","Date","getTime","ChatApp","serialize"],"mappings":";;AEAA;;;;AACA,AFDA,IECI4B,AFDA5B,MAAJ,MECA;ADDA;ADEA,SAASC,IAAT,CAAcC,GAAd,EAAmB;AACjBF,EAAAA,MAAM,GAAG,IAAIG,SAAJ,CAAcD,GAAd,CAAT;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD;;AAED,SAASC,mBAAT,CAA6BC,eAA7B,EAA8C;AAC5CP,EAAAA,MAAM,CAACQ,MAAP,GAAgB,YAAM;AACpBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAE,IAAAA,eAAe;AAChB,GAHD,CCNIY;ADUL;;ACTC,ADWF,SAASV,oBCPJ,EDOL,CAAgCF,eAAhC,EAAiD;ACP5C,ADQHP,EAAAA,MCXWoB,ADWL,CCRH,ADQIV,QCXLW,CDWF,GAAmB,GCRhB,ODQiBV,CAAD,EAAO;ACRvB,ADSDP,IAAAA,OAAO,CAACC,GAAR,CAAY,SCXZiB,ADWA,EAAuBX,CAAC,CCTvB,ADSwBC,IAAzB;ACTC,ADUD,QCZMW,ADYFX,CCVH,GDUO,GAAGC,IAAI,CAACC,KAAL,CAAWH,CAAC,CAACC,IAAb,CAAX,ECZU,QAET;AAAA,ADWDL,IAAAA,eAAe,CAACK,IAAD,CAAf,KCZAY,SACC;AAAA,ADYF,GAJD,KCTaC,CACV,+BADe,IAAIC,IAAJ,EAAD,CAAaC,OAAb,EACd;ADaJ;ACbI;ADeL,SAASZ,WAAT,CAAqBC,OAArB,EAA8B;ACd1B,ADeFhB,EAAAA,MAAM,CCfCsB,ADeAL,ICfL,ADeF,CAAYJ,ECfEU,CAAZ,CDec,CAACL,SAAL,CAAeF,OAAf,CAAZ;ACdE,ADeH,SCfQK,OAAL,GAAeD,CAAf;AACA,SAAKI,SAAL,GAAiBC,CAAjB;AACD,eDeY;AACbxB,EAAAA,IAAI,EAAJA,IADa;AAEbK,EAAAA,mBAAmB,EAAnBA,mBAFa;AAGbG,EAAAA,sBAAsB,EAAtBA,sBAHa;AAIbM,EAAAA,WAAW,EAAXA,iBClBY;AACV,ADaW,aCbJ;AACLO,QAAAA,IAAI,EAAE,KAAKA,IADN;AAELD,QAAAA,OAAO,EAAE,KAAKA,OAFT;AAGLG,QAAAA,SAAS,EAAE,KAAKA;AAHX,OAAP;AAKD;;;;;;IAGGI,UACJ,mBAAc;AAAA;;AACZ5B,oBAAOC,IAAP,CAAY,qBAAZ;;AACAD,oBAAOM,mBAAP,CAA2B,YAAM;AAC/B,QAAIe,OAAO,GAAG,IAAIF,WAAJ,CAAgB;AAAEE,MAAAA,OAAO,EAAE;AAAX,KAAhB,CAAd;;AACArB,sBAAOe,WAAP,CAAmBM,OAAO,CAACQ,SAAR,EAAnB;AACD,GAHD;;AAKA7B,oBAAOS,sBAAP,CAA8B,UAACG,IAAD,EAAU,CACtC;AACD,GAFD;AAGD;;eAEYgB","file":"main.js","sourceRoot":"..\\src","sourcesContent":["let socket;\r\n\r\nfunction init(url) {\r\n  socket = new WebSocket(url);\r\n  console.log('connecting...');\r\n}\r\n\r\nfunction registerOpenHandler(handlerFunction) {\r\n  socket.onopen = () => {\r\n    console.log('open');\r\n    handlerFunction();\r\n  };\r\n}\r\n\r\nfunction registerMessageHandler(handlerFunction) {\r\n  socket.onmessage = (e) => {\r\n    console.log('message', e.data);\r\n    let data = JSON.parse(e.data);\r\n    handlerFunction(data);\r\n  };\r\n}\r\n\r\nfunction sendMessage(payload) {\r\n  socket.send(JSON.stringify(payload));\r\n}\r\n\r\nexport default {\r\n  init,\r\n  registerOpenHandler,\r\n  registerMessageHandler,\r\n  sendMessage\r\n}\r\n","import socket from './ws-client';\r\n\r\nclass ChatMessage {\r\n  constructor({\r\n    message: m,\r\n    user: u = 'batman',\r\n    timestamp: t = (new Date()).getTime()\r\n  }) {\r\n    this.user = u;\r\n    this.message = m;\r\n    this.timestamp = t;\r\n  }\r\n  serialize() {\r\n    return {\r\n      user: this.user,\r\n      message: this.message,\r\n      timestamp: this.timestamp\r\n    };\r\n  }\r\n}\r\n\r\nclass ChatApp {\r\n  constructor() {\r\n    socket.init('ws://localhost:3001');\r\n    socket.registerOpenHandler(() => {\r\n      let message = new ChatMessage({ message: 'pow!' });\r\n      socket.sendMessage(message.serialize());\r\n    });\r\n\r\n    socket.registerMessageHandler((data) => {\r\n      // console.log(data);\r\n    });\r\n  }\r\n}\r\nexport default ChatApp;\r\n","import ChatApp from './app';\r\nnew ChatApp();\r\n"]}